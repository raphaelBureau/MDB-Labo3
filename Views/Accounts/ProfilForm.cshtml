@model MDB.Models.User

@{ 
    bool subscribing = (0 == Model.Id);
}

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <h3>@ViewBag.Title</h3>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })


    @Html.HiddenFor(model => model.Id)
    @Html.HiddenFor(model => model.Verified)
    @Html.HiddenFor(model => model.Blocked)
    @Html.HiddenFor(model => model.UserTypeId)
    @Html.HiddenFor(model => model.CreationDate)
    @Html.HiddenFor(model => model.Avatar)

    <fieldset class="formField">
        @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2 legend" })
        <div class="form-group">

            <div class="col-md-10">
                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control", @placeholder = Html.DisplayNameFor(model => model.FirstName) } })
                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">

            <div class="col-md-10">
                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control ", @placeholder = Html.DisplayNameFor(model => model.LastName) } })
                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
            </div>
        </div>
    </fieldset>
    <div style="width: 50%;">
        @Html.LabelFor(model => model.AvatarImageData, htmlAttributes: new { @class = "control-label col-md-2 legend" })
        <div class="form-group">

            <div class="col-md-10">

                @Helper.ImageUploader(Model.Id, "AvatarImageData", Model.GetAvatarURL(), "~/Images_Data/Loading_icon.gif", "Cliquez pour choisir une image")
                @Html.ValidationMessageFor(model => model.GenderId, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>
    <fieldset class="formField">
        <div class="form-group">
            @Html.LabelFor(model => model.GenderId, htmlAttributes: new { @class = "control-label col-md-2 legend" })
            <div class="col-md-10">
                <label> @Html.RadioButtonFor(model => model.GenderId, "1") Monsieur</label>
                <label> @Html.RadioButtonFor(model => model.GenderId, "2") Madame</label>
                <label> @Html.RadioButtonFor(model => model.GenderId, "3") Neutre</label>
                @Html.ValidationMessageFor(model => model.GenderId, "", new { @class = "text-danger" })
            </div>
        </div>
    </fieldset>
    <fieldset class="formField">
        @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2 legend" })
        <div class="form-group">

            <div class="col-md-10">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", @placeholder = Html.DisplayNameFor(model => model.Email) } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">

            <div class="col-md-10">
                @Html.EditorFor(model => model.ConfirmEmail, new { htmlAttributes = new { @class = "form-control", @placeholder = Html.DisplayNameFor(model => model.ConfirmEmail) } })
                @Html.ValidationMessageFor(model => model.ConfirmEmail, "", new { @class = "text-danger" })
            </div>
        </div>
    </fieldset>
    <fieldset class="formField">
        @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2 legend" })

        <div class="form-group">
            <div>
                @if (!subscribing)
                {
                    <label for="changePassword">Modifier</label>
                    <input type="checkbox" name="changePassword" id="changePassword" style="margin-top:-5px;" />
                }
            </div>

            <div class="col-md-10">
                <div style="display: grid; grid-template-columns: auto 0px">
                    @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control", @placeholder = Html.DisplayNameFor(model => model.Password) } })

                    <span id="toggleShowPassword" class="icon fa fa-eye-slash" title="Affichier le mot de passe" data-placement="bottom" style="">
                </div>
                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })

            </div>
        </div>

        <div class="form-group">
            <div class="col-md-10">
                @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control", @placeholder = Html.DisplayNameFor(model => model.ConfirmPassword) } })
                @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
            </div>
        </div>
    </fieldset>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @if (subscribing)
    {
        @Html.ActionLink("Retour", "Login")
    }
    else
    {
        @Html.ActionLink("Retour", "Index", "Movies")
    }
</div>

